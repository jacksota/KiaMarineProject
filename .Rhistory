for(i in 1:dim(use.data)[1]){
if(use.data$PositiveTestedActiveCasesLast45Days[i] != 0){
tmp.y <- as.numeric(use.data[i, 23:dim(use.data)[2]])
tmp.lm <- coef(summary(lm(tmp.y ~ tmp.x)))
for.out <- data.frame(
use.data$State[i],
use.data$County[i],
tmp.lm[2,1],
tmp.lm[2,4],
use.data$`PChange2020-07-16`[i]
)
names(for.out) <- c("State", "County", "slope", "p.value", "last.change")
lm.data <- rbind(lm.data, for.out)
}
print(paste0(100*round(i/dim(use.data)[1], 4), "% - regressions"))
}
dim(lm.data[lm.data$p.value <= .05,])[1]/dim(lm.data)[1]
lm.data[lm.data$p.value <= .05,]
head(use.data)
# Creating analysis -------------------------------------------------------
tmp.x <- as.Date(names(use.data)[9:22])
lm.data <- data.frame()
for(i in 1:dim(use.data)[1]){
if(use.data$PositiveTestedActiveCasesLast45Days[i] != 0){
tmp.y <- as.numeric(use.data[i, 23:dim(use.data)[2]])
tmp.lm <- coef(summary(lm(tmp.y ~ tmp.x)))
for.out <- data.frame(
use.data$State[i],
use.data$County[i],
tmp.lm[2,1],
tmp.lm[2,4],
use.data$`PChange2020-07-16`[i],
use.data$`2020-07-16`
)
names(for.out) <- c("State", "County", "slope", "p.value", "last.change", "last.count")
lm.data <- rbind(lm.data, for.out)
}
print(paste0(100*round(i/dim(use.data)[1], 4), "% - regressions"))
}
dim(lm.data[lm.data$p.value <= .05,])[1]/dim(lm.data)[1]
lm.data[lm.data$p.value <= .05,]
tmp.x <- as.Date(names(use.data)[9:22])
lm.data <- data.frame()
for(i in 1:dim(use.data)[1]){
if(use.data$PositiveTestedActiveCasesLast45Days[i] != 0){
tmp.y <- as.numeric(use.data[i, 23:dim(use.data)[2]])
tmp.lm <- coef(summary(lm(tmp.y ~ tmp.x)))
for.out <- data.frame(
use.data$State[i],
use.data$County[i],
tmp.lm[2,1],
tmp.lm[2,4],
use.data$`PChange2020-07-16`[i],
use.data$`2020-07-16`[i]
)
names(for.out) <- c("State", "County", "slope", "p.value", "last.change", "last.count")
lm.data <- rbind(lm.data, for.out)
}
print(paste0(100*round(i/dim(use.data)[1], 4), "% - regressions"))
}
dim(lm.data[lm.data$p.value <= .05,])[1]/dim(lm.data)[1]
lm.data[lm.data$p.value <= .05,]
lm.use <- lm.data[lm.data$p.value <= .05,]
new.data <- data.frame()
dim(use.data)[1]
dim(lm.use)
23/268
names(use.data)
# Creating analysis -------------------------------------------------------
tmp.x <- as.Date(names(use.data)[16:22])
lm.data <- data.frame()
for(i in 1:dim(use.data)[1]){
if(use.data$PositiveTestedActiveCasesLast45Days[i] != 0){
tmp.y <- as.numeric(use.data[i, 16:22])
tmp.lm <- coef(summary(lm(tmp.y ~ tmp.x)))
for.out <- data.frame(
use.data$State[i],
use.data$County[i],
tmp.lm[2,1],
tmp.lm[2,4],
use.data$`PChange2020-07-16`[i],
use.data$`2020-07-16`[i]
)
names(for.out) <- c("State", "County", "slope", "p.value", "last.change", "last.count")
lm.data <- rbind(lm.data, for.out)
}
print(paste0(100*round(i/dim(use.data)[1], 4), "% - regressions"))
}
lm.data
rm(list = ls())
x <- read.csv(file.choose())
hist(unique(x$RtByState), breaks = 10, col = 'blue')
hist(unique(x$RtByState), breaks = 20, col = 'blue')
hist(unique(x$RtByState), breaks = 30, col = 'blue')
hist(unique(x$RtByState), col = 'blue')
hist(unique(x$RtByState), col = 'blue', breaks = 5)
hist(unique(x$RtByState), col = 'blue', breaks = 8)
length(unique(x$RtByState))
abline(v = mean(unique(x$RtByState)))
abline(v = mean(unique(x$RtByState)), lwd = 2)
abline(v = mean(unique(x$RtByState)), lwd = 2, col = 'red')
mean(unique(x$RtByState))
median(unique(x$RtByState))
unique(x$RtByState)
unique(x$State[x$RtByState])
unique(x$State[x$RtByState <= 1.0])
rm(list = ls())
x <- list.files("./Data")
x
x[order(x)]
x <- list.files("./Data")
x[order(x)]
# Loading Needed Functions ------------------------------------------------
source("./RFunctions/LoadLibrary.R")
kiah.files <- kiah.files[order(kiah.files, decreasing = TRUE)]
kiah.files[1]
# Loading Data ------------------------------------------------------------
kiah.files <- list.files("./Data")
kiah.files <- kiah.files[order(kiah.files, decreasing = TRUE)]
kiah.files[1]
kiah.data <- read.csv(paste0("./Data/", kiah.files[1]))
names(kiah.data)
as.Date("6.6.20")
as.Date("6-6-20")
as.Date("6-6-20", format = "%m/%d/%y")
as.Date("6-6-20", format = "%m/%d/%Y")
as.Date("6-6-2020", format = "%m/%d/%y")
as.Date("6/6/20", format = "%m/%d/%y")
load.library(c(
"stringr"
))
# Cleaning data -----------------------------------------------------------
demo.data <- kiah.data[,1:7]
date.data <- kiah.data[,8:dim(kiah.data)[2]]
substr(names(date.data), 2, nchar)
names(as.character(date.data))
# Cleaning data -----------------------------------------------------------
demo.data <- kiah.data[,1:7]
date.data <- kiah.data[,8:dim(kiah.data)[2]]
names(date.data)
substr(as.character(names(date.data)), 2, nchar)
as.character(names(date.data))
substr(names(date.data), 2, nchar(names(date.data))
)
str_replace(substr(names(date.data), 2, nchar(names(date.data))), ".", "/")
substr(names(date.data), 2, nchar(names(date.data)))
str_replace("7.20.2020", ".", "/")
str_replace_all("7.20.2020", ".", "/")
gsub(".", "/", substr(names(date.data), 2, nchar(names(date.data))))
substr(names(date.data), 2, nchar(names(date.data)))
gsub(".", "/", as.character(substr(names(date.data), 2, nchar(names(date.data)))))
as.character(substr(names(date.data), 2, nchar(names(date.data))))
new.dates <- as.character(substr(names(date.data), 2, nchar(names(date.data))))
new.dates
gsub("6.8.2020", ".", "/")
gsub(".", "//", "6.8.2020")
gsub("d", "e", "abcd")
gsub("d", "/", "abcd")
gsub(".", "/", "ab.d")
gsub(".", "/", toString("ab.d"))
gsub(".", "x", toString("ab.d"))
as.Date("7.20.2020")
as.Date(toString("7.20.2020"))
?gsub
gsub(".", "x", "ab.d", ignore.case = TRUE)
gsub(".", "x", "ab.d", perl = TRUE)
gsub(".", "x", "ab.d", fixed = TRUE)
new.dates <- gsub(".", "/", as.character(substr(names(date.data), 2, nchar(names(date.data)))), fixed = TRUE)
new.dates
new.dates <- as.Date(gsub(".", "/", as.character(substr(names(date.data), 2, nchar(names(date.data)))), fixed = TRUE), "%m/%d/%y")
new.dates
# Cleaning data -----------------------------------------------------------
names(kiah.data)[8:dim(kiah.data)[2]] <- as.Date(gsub(".", "/", as.character(substr(names(date.data), 2, nchar(names(date.data)))), fixed = TRUE), "%m/%d/%y")
head(kiah.data)
rm(list = ls())
# Loading Needed Functions and packages -----------------------------------
source("./RFunctions/LoadLibrary.R")
load.library(c(
"stringr"
))
# Loading Data ------------------------------------------------------------
kiah.files <- list.files("./Data")
kiah.files <- kiah.files[order(kiah.files, decreasing = TRUE)]
kiah.data <- read.csv(paste0("./Data/", kiah.files[1]))
# Cleaning data -----------------------------------------------------------
names(kiah.data)[8:dim(kiah.data)[2]] <- as.character(as.Date(gsub(".", "/", as.character(substr(names(date.data), 2, nchar(names(date.data)))), fixed = TRUE), "%m/%d/%y"))
# Cleaning data -----------------------------------------------------------
names(kiah.data)[8:dim(kiah.data)[2]] <- as.character(as.Date(gsub(".", "/", as.character(substr(names(kiah.data)[8:dim(kiah.data)[2]], 2, nchar(names(kiah.data)[8:dim(kiah.data)[2]]))), fixed = TRUE), "%m/%d/%y"))
names(kiah.data)
rm(list = ls())
# Loading Needed Functions and packages -----------------------------------
source("./RFunctions/LoadLibrary.R")
load.library(c(
"stringr"
))
# Loading Data ------------------------------------------------------------
kiah.files <- list.files("./Data")
kiah.files <- kiah.files[order(kiah.files, decreasing = TRUE)]
kiah.data <- read.csv(paste0("./Data/", kiah.files[1]))
# Cleaning data -----------------------------------------------------------
names(kiah.data)[8:dim(kiah.data)[2]] <- as.character(as.Date(gsub(".", "/", as.character(substr(names(kiah.data)[8:dim(kiah.data)[2]], 2, nchar(names(kiah.data)[8:dim(kiah.data)[2]]))), fixed = TRUE),"%m/%d/%y"))
kiah.data <- kiah.data[,c(1:7,dim(kiah.data)[2]:8)]
head(kiah.data)
(dim(kiah.data)[2] - 6):dim(kiah.data)[2]
kiah.data[i,c((dim(kiah.data)[2] - 13):(dim(kiah.data)[2] - 7))]
names(kiah.data)[c((dim(kiah.data)[2] - 13):(dim(kiah.data)[2] - 7))]
names(kiah.data)[c((dim(kiah.data)[2] - 6):(dim(kiah.data)[2]))]
# Creating piecewise regressions ------------------------------------------
old.reg <- list()
new.reg <- list()
x <- 1:7
for(i in 1:dim(kiah.data)[1]){
new.y <- kiah.data[i,c((dim(kiah.data)[2] - 6):dim(kiah.data)[2])]
new.reg[[i]] <- coef(summary(lm(new.y ~ x)))
names(new.reg)[i] <- paste0(kiah.data$State[i], " - ", kiah.data$County[i])
old.y <- kiah.data[i,c((dim(kiah.data)[2] - 13):(dim(kiah.data)[2] - 7))]
old.reg[[i]] <- coef(summary(lm(old.y ~ x)))
names(old.reg)[i] <- paste0(kiah.data$State[i], " - ", kiah.data$County[i])
}
new.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 6):dim(kiah.data)[2])])
coef(summary(lm(new.y ~ x)))
plot(new.y ~ x)
# Creating piecewise regressions ------------------------------------------
old.reg <- list()
new.reg <- list()
x <- 1:7
for(i in 1:dim(kiah.data)[1]){
old.y <- kiah.data[i,c((dim(kiah.data)[2] - 13):(dim(kiah.data)[2] - 7))]
old.reg[[i]] <- coef(summary(lm(old.y ~ x)))
names(old.reg)[i] <- paste0(kiah.data$State[i], " - ", kiah.data$County[i])
new.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 6):dim(kiah.data)[2])])
new.reg[[i]] <- coef(summary(lm(new.y ~ x)))
names(new.reg)[i] <- paste0(kiah.data$State[i], " - ", kiah.data$County[i])
print(paste0(100*round(i/dim(kiah.data)[1], 4), "% - Regressions"))
}
x <- 1:7
old.reg <- list()
new.reg <- list()
for(i in 1:dim(kiah.data)[1]){
old.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 13):(dim(kiah.data)[2] - 7))])
old.reg[[i]] <- coef(summary(lm(old.y ~ x)))
names(old.reg)[i] <- paste0(kiah.data$State[i], " - ", kiah.data$County[i])
new.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 6):dim(kiah.data)[2])])
new.reg[[i]] <- coef(summary(lm(new.y ~ x)))
names(new.reg)[i] <- paste0(kiah.data$State[i], " - ", kiah.data$County[i])
print(paste0(100*round(i/dim(kiah.data)[1], 4), "% - Regressions"))
}
x <- 1:7
old.reg <- list()
new.reg <- list()
for(i in 1:dim(kiah.data)[1]){
if(kiah.data$PositiveTestedActiveCasesLast45Days != 0){
old.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 13):(dim(kiah.data)[2] - 7))])
old.reg[[i]] <- coef(summary(lm(old.y ~ x)))
names(old.reg)[i] <- paste0(kiah.data$State[i], " - ", kiah.data$County[i])
new.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 6):dim(kiah.data)[2])])
new.reg[[i]] <- coef(summary(lm(new.y ~ x)))
names(new.reg)[i] <- paste0(kiah.data$State[i], " - ", kiah.data$County[i])
}
print(paste0(100*round(i/dim(kiah.data)[1], 4), "% - Regressions"))
}
old.y
new.y
kiah.data[i,]
# Creating piecewise regressions ------------------------------------------
x <- 1:7
old.reg <- list()
new.reg <- list()
for(i in 1:dim(kiah.data)[1]){
if(kiah.data$PositiveTestedActiveCasesLast45Days[i] != 0){
old.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 13):(dim(kiah.data)[2] - 7))])
old.reg[[i]] <- coef(summary(lm(old.y ~ x)))
names(old.reg)[i] <- paste0(kiah.data$State[i], " - ", kiah.data$County[i])
new.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 6):dim(kiah.data)[2])])
new.reg[[i]] <- coef(summary(lm(new.y ~ x)))
names(new.reg)[i] <- paste0(kiah.data$State[i], " - ", kiah.data$County[i])
}
print(paste0(100*round(i/dim(kiah.data)[1], 4), "% - Regressions"))
}
old.reg
i <- 1
old.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 13):(dim(kiah.data)[2] - 7))])
old.reg <- coef(summary(lm(old.y ~ x)))
new.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 6):dim(kiah.data)[2])])
new.reg <- coef(summary(lm(new.y ~ x)))
old.reg
old.reg[2,2]
?tp
?pt
new.reg
pt(test.stat, (7 + 7 - 4), lower.tail = FALSE)
old.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 13):(dim(kiah.data)[2] - 7))])
old.reg <- coef(summary(lm(old.y ~ x)))
new.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 6):dim(kiah.data)[2])])
new.reg <- coef(summary(lm(new.y ~ x)))
test.stat <- (new.reg[2,1] - old.reg[2,1])/sqrt(new.reg[2,2]^2 + old.reg[2,2]^2)
test.stat
pt(test.stat, (7 + 7 - 4), lower.tail = FALSE)
rm(list = ls())
# Loading Needed Functions and packages -----------------------------------
source("./RFunctions/LoadLibrary.R")
load.library(c(
"stringr"
))
# Loading Data ------------------------------------------------------------
kiah.files <- list.files("./Data")
kiah.files <- kiah.files[order(kiah.files, decreasing = TRUE)]
kiah.data <- read.csv(paste0("./Data/", kiah.files[1]))
# Cleaning data -----------------------------------------------------------
names(kiah.data)[8:dim(kiah.data)[2]] <- as.character(as.Date(gsub(".", "/", as.character(substr(names(kiah.data)[8:dim(kiah.data)[2]], 2, nchar(names(kiah.data)[8:dim(kiah.data)[2]]))), fixed = TRUE),"%m/%d/%y"))
kiah.data <- kiah.data[,c(1:7,dim(kiah.data)[2]:8)]
# Creating piecewise regressions ------------------------------------------
x <- 1:7
reg.data <- data.frame()
for(i in 1:dim(kiah.data)[1]){
if(kiah.data$PositiveTestedActiveCasesLast45Days[i] != 0){
old.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 13):(dim(kiah.data)[2] - 7))])
old.reg <- coef(summary(lm(old.y ~ x)))
new.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 6):dim(kiah.data)[2])])
new.reg <- coef(summary(lm(new.y ~ x)))
test.stat <- (new.reg[2,1] - old.reg[2,1])/sqrt(new.reg[2,2]^2 + old.reg[2,2]^2)
for.out <- data.frame(
kiah.data$State[i],
kiah.data$County[i],
old.reg[2,1],
old.reg[2,2],
old.reg[2,4],
new.reg[2,1],
new.reg[2,2],
new.reg[2,4],
test.stat,
pt(test.stat, (7 + 7 - 4), lower.tail = FALSE)
)
names(for.out) <- c("State", "County", "OldSlope", "OldError", "OldPValue", "NewSlope", "NewError", "NewPValue", "TestStat", "PValue")
}
print(paste0(100*round(i/dim(kiah.data)[1], 4), "% - Regressions"))
}
rm(list = ls())
# Loading Needed Functions and packages -----------------------------------
source("./RFunctions/LoadLibrary.R")
load.library(c(
"stringr"
))
# Loading Data ------------------------------------------------------------
kiah.files <- list.files("./Data")
kiah.files <- kiah.files[order(kiah.files, decreasing = TRUE)]
kiah.data <- read.csv(paste0("./Data/", kiah.files[1]))
# Cleaning data -----------------------------------------------------------
names(kiah.data)[8:dim(kiah.data)[2]] <- as.character(as.Date(gsub(".", "/", as.character(substr(names(kiah.data)[8:dim(kiah.data)[2]], 2, nchar(names(kiah.data)[8:dim(kiah.data)[2]]))), fixed = TRUE),"%m/%d/%y"))
kiah.data <- kiah.data[,c(1:7,dim(kiah.data)[2]:8)]
# Creating piecewise regressions ------------------------------------------
x <- 1:7
reg.data <- data.frame()
for(i in 1:dim(kiah.data)[1]){
if(kiah.data$PositiveTestedActiveCasesLast45Days[i] != 0){
old.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 13):(dim(kiah.data)[2] - 7))])
old.reg <- coef(summary(lm(old.y ~ x)))
new.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 6):dim(kiah.data)[2])])
new.reg <- coef(summary(lm(new.y ~ x)))
test.stat <- (new.reg[2,1] - old.reg[2,1])/sqrt(new.reg[2,2]^2 + old.reg[2,2]^2)
for.out <- data.frame(
kiah.data$State[i],
kiah.data$County[i],
old.reg[2,1],
old.reg[2,2],
old.reg[2,4],
new.reg[2,1],
new.reg[2,2],
new.reg[2,4],
test.stat,
pt(test.stat, (7 + 7 - 4), lower.tail = FALSE)
)
names(for.out) <- c("State", "County", "OldSlope", "OldError", "OldPValue", "NewSlope", "NewError", "NewPValue", "TestStat", "PValue")
reg.data <- rbind(reg.data, for.out)
}
print(paste0(100*round(i/dim(kiah.data)[1], 4), "% - Regressions"))
}
head(reg.data)
dim(reg.data[reg.data$PValue <= .05,])[1]/dim(reg.data)[1]
reg.data[reg.data$PValue <= .05,]
rm(list = ls())
# Loading Needed Functions and packages -----------------------------------
source("./RFunctions/LoadLibrary.R")
load.library(c(
"stringr"
))
# Loading Data ------------------------------------------------------------
kiah.files <- list.files("./Data")
kiah.files <- kiah.files[order(kiah.files, decreasing = TRUE)]
kiah.data <- read.csv(paste0("./Data/", kiah.files[1]))
# Cleaning data -----------------------------------------------------------
names(kiah.data)[8:dim(kiah.data)[2]] <- as.character(as.Date(gsub(".", "/", as.character(substr(names(kiah.data)[8:dim(kiah.data)[2]], 2, nchar(names(kiah.data)[8:dim(kiah.data)[2]]))), fixed = TRUE),"%m/%d/%y"))
kiah.data <- kiah.data[,c(1:7,dim(kiah.data)[2]:8)]
# Creating piecewise regressions ------------------------------------------
x <- 1:7
reg.data <- data.frame()
for(i in 1:dim(kiah.data)[1]){
if(kiah.data$PositiveTestedActiveCasesLast45Days[i] != 0){
old.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 13):(dim(kiah.data)[2] - 7))])
old.reg <- coef(summary(lm(old.y ~ x)))
new.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 6):dim(kiah.data)[2])])
new.reg <- coef(summary(lm(new.y ~ x)))
test.stat <- (new.reg[2,1] - old.reg[2,1])/sqrt(new.reg[2,2]^2 + old.reg[2,2]^2)
for.out <- data.frame(
kiah.data$State[i],
kiah.data$County[i],
kiah.data$RtByState[i],
old.reg[2,1],
old.reg[2,2],
old.reg[2,4],
new.reg[2,1],
new.reg[2,2],
new.reg[2,4],
test.stat,
pt(test.stat, (7 + 7 - 4), lower.tail = FALSE)
)
names(for.out) <- c("State", "County", "StateRt", "OldSlope", "OldError", "OldPValue", "NewSlope", "NewError", "NewPValue", "TestStat", "PValue")
reg.data <- rbind(reg.data, for.out)
}
print(paste0(100*round(i/dim(kiah.data)[1], 4), "% - Regressions"))
}
reg.data[reg.data$PValue <= .05,]
kiah.data[kiah.data$State == "MO" & kiah.data$County == "Cedar",]
sign(reg.data$TestStat)
reg.data[reg.data$PValue <= .05 & reg.data$TestStat > 0,]
rm(list = ls())
# Loading Needed Functions and packages -----------------------------------
source("./RFunctions/LoadLibrary.R")
load.library(c(
"stringr"
))
# Loading Data ------------------------------------------------------------
kiah.files <- list.files("./Data")
kiah.files <- kiah.files[order(kiah.files, decreasing = TRUE)]
kiah.data <- read.csv(paste0("./Data/", kiah.files[1]))
# Cleaning data -----------------------------------------------------------
names(kiah.data)[8:dim(kiah.data)[2]] <- as.character(as.Date(gsub(".", "/", as.character(substr(names(kiah.data)[8:dim(kiah.data)[2]], 2, nchar(names(kiah.data)[8:dim(kiah.data)[2]]))), fixed = TRUE),"%m/%d/%y"))
kiah.data <- kiah.data[,c(1:7,dim(kiah.data)[2]:8)]
# Creating piecewise regressions ------------------------------------------
x <- 1:7
reg.data <- data.frame()
for(i in 1:dim(kiah.data)[1]){
if(kiah.data$PositiveTestedActiveCasesLast45Days[i] != 0){
old.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 13):(dim(kiah.data)[2] - 7))])
old.reg <- coef(summary(lm(old.y ~ x)))
new.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 6):dim(kiah.data)[2])])
new.reg <- coef(summary(lm(new.y ~ x)))
test.stat <- (new.reg[2,1] - old.reg[2,1])/sqrt(new.reg[2,2]^2 + old.reg[2,2]^2)
for.out <- data.frame(
kiah.data$State[i],
kiah.data$County[i],
kiah.data$RtByState[i],
old.reg[2,1],
old.reg[2,2],
old.reg[2,4],
new.reg[2,1],
new.reg[2,2],
new.reg[2,4],
test.stat,
pt(abs(test.stat), (7 + 7 - 4), lower.tail = FALSE)
)
names(for.out) <- c("State", "County", "StateRt", "OldSlope", "OldError", "OldPValue", "NewSlope", "NewError", "NewPValue", "TestStat", "PValue")
reg.data <- rbind(reg.data, for.out)
}
print(paste0(100*round(i/dim(kiah.data)[1], 4), "% - Regressions"))
}
reg.data[reg.data$PValue <= .05 & reg.data$TestStat > 0,]
rm(list = ls())
# Loading Needed Functions and packages -----------------------------------
source("./RFunctions/LoadLibrary.R")
load.library(c(
"stringr"
))
# Loading Data ------------------------------------------------------------
kiah.files <- list.files("./Data")
kiah.files <- kiah.files[order(kiah.files, decreasing = TRUE)]
kiah.data <- read.csv(paste0("./Data/", kiah.files[1]))
# Cleaning data -----------------------------------------------------------
names(kiah.data)[8:dim(kiah.data)[2]] <- as.character(as.Date(gsub(".", "/", as.character(substr(names(kiah.data)[8:dim(kiah.data)[2]], 2, nchar(names(kiah.data)[8:dim(kiah.data)[2]]))), fixed = TRUE),"%m/%d/%y"))
kiah.data <- kiah.data[,c(1:7,dim(kiah.data)[2]:8)]
# Creating piecewise regressions ------------------------------------------
x <- 1:7
reg.data <- data.frame()
for(i in 1:dim(kiah.data)[1]){
if(kiah.data$PositiveTestedActiveCasesLast45Days[i] != 0){
old.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 13):(dim(kiah.data)[2] - 7))])
old.reg <- coef(summary(lm(old.y ~ x)))
new.y <- t(kiah.data[i,c((dim(kiah.data)[2] - 6):dim(kiah.data)[2])])
new.reg <- coef(summary(lm(new.y ~ x)))
test.stat <- (new.reg[2,1] - old.reg[2,1])/sqrt(new.reg[2,2]^2 + old.reg[2,2]^2)
for.out <- data.frame(
kiah.data$State[i],
kiah.data$County[i],
kiah.data$RtByState[i],
old.reg[2,1],
old.reg[2,2],
old.reg[2,4],
new.reg[2,1],
new.reg[2,2],
new.reg[2,4],
test.stat,
pt(abs(test.stat), (7 + 7 - 4), lower.tail = FALSE)
)
names(for.out) <- c("State", "County", "StateRt", "OldSlope", "OldError", "OldPValue", "NewSlope", "NewError", "NewPValue", "TestStat", "PValue")
reg.data <- rbind(reg.data, for.out)
}
print(paste0(100*round(i/dim(kiah.data)[1], 4), "% - Regressions"))
}
reg.data[reg.data$PValue <= .05 & reg.data$TestStat > 0,]
reg.data[reg.data$PValue <= .05 & reg.data$TestStat < 0,]
summary(reg.data$StateRt[reg.data$PValue <= .05 & reg.data$TestStat > 0])
summary(reg.data$StateRt[reg.data$PValue <= .05 & reg.data$TestStat < 0])
