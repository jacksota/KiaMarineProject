yaxt = 'n',
xlab = "Days",
ylab = "Confirmed Infections",
main = "Corona By State",
ylim = c(0, 40000)
)
rect(18400, -20000,18440, 160000, col = "grey90")
x.lines <- seq(as.Date("2020-05-25"), as.Date("2020-06-22"), 7)
for(i in 1:length(x.lines)){abline(v = x.lines[i], col = "white")}
y.lines <- seq(-20000, 160000, 20000)
for(i in 1:length(y.lines)){abline(h = y.lines[i], col = "white")}
axis(1, seq(18400, 18440, 40), rep(NA, 2))
axis(2, seq(-20000, 160000, 20000))
for(i in 1:length(unq.states)){
points(
state.data$virus.count[state.data$state == unq.states[i]] ~ state.data$day[state.data$state == unq.states[i]],
col = i,
type = 'l'
)
print(paste0(100*round(i/length(unq.states), 4), "% - Combining States"))
}
rect(18400, -20000,184400, 160000, col = "grey90")
x.lines <- seq(as.Date("2020-05-25"), as.Date("2020-06-22"), 7)
for(i in 1:length(x.lines)){abline(v = x.lines[i], col = "white")}
y.lines <- seq(-20000, 160000, 20000)
for(i in 1:length(y.lines)){abline(h = y.lines[i], col = "white")}
axis(1, seq(18400, 18440, 40), rep(NA, 2))
axis(2, seq(-20000, 160000, 20000))
for(i in 1:length(unq.states)){
points(
state.data$virus.count[state.data$state == unq.states[i]] ~ state.data$day[state.data$state == unq.states[i]],
col = i,
type = 'l'
)
print(paste0(100*round(i/length(unq.states), 4), "% - Combining States"))
}
unq.states
sum(kiah.data$MarineCnts)
30/sum(kiah.data$MarineCnts)
29/692
28/692
unq.states
head(kiah.data[,1:8])
head(kiah.data[,1:7])
summary(unique(kiah.data$RtByState))
30*.0433*1.02
30*.0433
kiah.data[1:20,1:7]
tmp <- kiah.data[order(kiah.data$MarineCnts, decreasing = TRUE), 1:7]
tmp[1:20,]
dim(kiah.data)
pmt <- kiah.data[order(kiah.data$RtByState, decreasing = TRUE),1:7]
pmt[1:20,]
tail(pmt)
rm(list = ls())
# Reading in data ---------------------------------------------------------
kiah.data <- read.csv("./Data/MarineJulyTrainingAnalysis.csv")
names(kiah.data)[8:dim(kiah.data)[2]] <- as.character(rev(seq(as.Date('2020-05-29'),as.Date('2020-07-12'),1)))
kiah.data <- kiah.data[,na.omit(match(c(names(kiah.data)[1:7], as.character(seq(as.Date('2020-05-29'),as.Date('2020-07-12'),1))), names(kiah.data)))]
# Examine by State --------------------------------------------------------
unq.states <- unique(kiah.data$State[order(kiah.data$State)])
state.data <- data.frame()
for(i in 1:length(unq.states)){
tmp.data <- kiah.data[kiah.data$State == unq.states[i],]
tmp.data[is.na(tmp.data)] <- 0
for.out <- data.frame(
as.character(unq.states[i]),
as.Date(names(tmp.data)[c(8:dim(tmp.data)[2])]),
sum(tmp.data$MarineCnts),
apply(tmp.data[,c(8:dim(tmp.data)[2])], 2, sum)
)
names(for.out) <- c("state", "day", "marine.count", "virus.count")
state.data <- rbind(state.data, for.out)
print(paste0(100*round(i/length(unq.states), 4), "% - Combining States"))
}
plot(1,1); dev.off()
par(mfrow = c(1, 2))
plot(
state.data$virus.count ~ as.Date(state.data$day),
col = 'blue',
type = 'n',
bty = 'n',
# xaxt = 'n',
yaxt = 'n',
xlab = "Days",
ylab = "Confirmed Infections",
main = "Corona By State"
)
rect(18400, -20000,184400, 1600000, col = "grey90")
x.lines <- seq(as.Date("2020-05-29"), as.Date("2020-07-12"), 7)
for(i in 1:length(x.lines)){abline(v = x.lines[i], col = "white")}
y.lines <- seq(-20000, 1600000, 20000)
for(i in 1:length(y.lines)){abline(h = y.lines[i], col = "white")}
axis(1, seq(18400, 184400, 40), rep(NA, 2))
axis(2, seq(-20000, 1600000, 20000))
for(i in 1:length(unq.states)){
points(
state.data$virus.count[state.data$state == unq.states[i]] ~ state.data$day[state.data$state == unq.states[i]],
col = i,
type = 'l'
)
print(paste0(100*round(i/length(unq.states), 4), "% - Plotting States"))
}
plot(
state.data$virus.count ~ as.Date(state.data$day),
col = 'blue',
type = 'n',
bty = 'n',
# xaxt = 'n',
yaxt = 'n',
xlab = "Days",
ylab = "Confirmed Infections",
main = "Corona By State",
ylim = c(0, 40000)
)
rect(18400, -20000,184400, 160000, col = "grey90")
x.lines <- seq(as.Date("2020-05-25"), as.Date("2020-06-22"), 7)
for(i in 1:length(x.lines)){abline(v = x.lines[i], col = "white")}
y.lines <- seq(-20000, 160000, 20000)
for(i in 1:length(y.lines)){abline(h = y.lines[i], col = "white")}
axis(1, seq(18400, 18440, 40), rep(NA, 2))
axis(2, seq(-20000, 160000, 20000))
for(i in 1:length(unq.states)){
points(
state.data$virus.count[state.data$state == unq.states[i]] ~ state.data$day[state.data$state == unq.states[i]],
col = i,
type = 'l'
)
print(paste0(100*round(i/length(unq.states), 4), "% - Plotting Sub States"))
}
dev.off()
hist(kiah.data$RtByState, breaks = 40)
max(kiah.data$RtByState)
rm(list = ls())
source("./RFunctions/LoadLibrary.R")
# Read in the data --------------------------------------------------------
kiah.data <- read.csv("./Data/MarineTrianingAnalysis07172020.csv")
# Read in the data --------------------------------------------------------
kiah.data <- read.csv("./Data/MarineTrainingAnalysis07172020.csv")
head(kiah.data)
names(kiah.data)
start.date <- as.Date("2020-06-03")
end.date <- as.Date("2020-07-16")
names(kiah.data)[8:dim(kiah.data)[2]] <- as.character(rev(seq(start.date, end.date,1)))
kiah.data <- kiah.data[,na.omit(match(c(names(kiah.data)[1:7], as.character(seq(start.date, end.date,1))), names(kiah.data)))]
start.date <- as.Date("2020-06-03")
end.date <- as.Date("2020-07-16")
as.character(rev(seq(start.date, end.date,1)))
names(kiah.data)
# Read in the data --------------------------------------------------------
kiah.data <- read.csv("./Data/MarineTrainingAnalysis07172020.csv")
start.date <- as.Date("2020-06-03")
end.date <- as.Date("2020-07-16")
names(kiah.data)
start.date <- as.Date("2020-06-02")
end.date <- as.Date("2020-07-16")
names(kiah.data)[8:dim(kiah.data)[2]] <- as.character(rev(seq(start.date, end.date,1)))
kiah.data <- kiah.data[,na.omit(match(c(names(kiah.data)[1:7], as.character(seq(start.date, end.date,1))), names(kiah.data)))]
names(kiah.data)
use.data <- kiah.data[,c(1:7, (dim(kiah.data)[2] - 13):dim(kiah.data)[2]]
c(1:7, (dim(kiah.data)[2] - 13):dim(kiah.data)[2])
use.data <- kiah.data[,c(1:7, (dim(kiah.data)[2] - 13):dim(kiah.data)[2])]
head(use.data)
(6755-5111)/5111
(6837-6755)/6755
(8561-8300)/8300
use.data <- kiah.data[,c(1:7, (dim(kiah.data)[2] - 14):dim(kiah.data)[2])]
dim(use.data)
i <- 1
# Creating % increase/decrease by county ----------------------------------
for(i in 8:22){
new.data <- use.data[,i]
old.data <- use.data[,i-1]
use.data[,dim(use.data)[2]+1] <- (new.data - old.data)/old.data
names(use.data)[dim(use.data)[2]] <- paste0("PChange", names(use.data)[i])
}
head(use.data)
kiah.data <- read.csv("./Data/MarineTrainingAnalysis07172020.csv")
start.date <- as.Date("2020-06-02")
end.date <- as.Date("2020-07-16")
# Cleaning up data --------------------------------------------------------
names(kiah.data)[8:dim(kiah.data)[2]] <- as.character(rev(seq(start.date, end.date,1)))
kiah.data <- kiah.data[,na.omit(match(c(names(kiah.data)[1:7], as.character(seq(start.date, end.date,1))), names(kiah.data)))]
use.data <- kiah.data[,c(1:7, (dim(kiah.data)[2] - 14):dim(kiah.data)[2])]
# Creating % increase/decrease by county ----------------------------------
for(i in 9:22){
new.data <- use.data[,i]
old.data <- use.data[,i-1]
use.data[,dim(use.data)[2]+1] <- (new.data - old.data)/old.data
names(use.data)[dim(use.data)[2]] <- paste0("PChange", names(use.data)[i])
}
head(use.data)
apply(use.data[,23:dim(use.data)[2]], 2, max)
summary(use.data)
use.data[is.na(use.data)]
use.data[is.na(use.data$`PChange2020-07-16`),]
use.data[is.na(use.data)] <- 0
apply(use.data[,23:dim(use.data)[2]], 2, max)
use.data[use.data$`PChange2020-07-04` == 1,]
x <- unique(kiah.data$RtByState); x[order(x)]
names(use.data)[23:dim(use.data)[2]]
names(use.data)[9:22]
names(use.data)[9:22]
# Visualization -----------------------------------------------------------
plot(
1 ~ names(use.data)[9:22]
xlab = "",
ylab = "",
xlim = ,
ylim = ,
bty = "n",
# xaty = "n",
yaty = "n"
)
# Visualization -----------------------------------------------------------
plot(
1 ~ names(use.data)[9:22],
xlab = "",
ylab = "",
xlim = ,
ylim = ,
bty = "n",
# xaty = "n",
yaty = "n"
)
# Visualization -----------------------------------------------------------
plot(
c(9:22) ~ names(use.data)[9:22],
xlab = "",
ylab = "",
xlim = ,
ylim = ,
bty = "n",
# xaty = "n",
yaty = "n"
)
# Visualization -----------------------------------------------------------
plot(
c(9:22) ~ names(use.data)[9:22]
# xlab = "",
# ylab = "",
# xlim = ,
# # ylim = ,
# bty = "n",
# xaty = "n",
# yaty = "n"
)
use.data[,c(1:7, 23:dim(use.data)[2])]
use.data[1:20,c(1:7, 23:dim(use.data)[2])]
use.data[1:20,c(1:7, 23:dim(use.data)[2])]
x <- as.Date(names(use.data)[9:22])
x
head(use.data)
y <- t(use.data[1,23:dim(use.data)[2]])
x
y
y <- t(c(use.data[1,23:dim(use.data)[2]]))
y
y <- data.frame(t(use.data[1,23:dim(use.data)[2]]))
x
y
plot(y~x)
plot(y$X1~x)
use.data$County[1]
plot(
y$X1~x,
type = "l"
)
abline(lm(y~x))
abline(lm(y$X1~x))
plot(
y$X1~x,
type = "l",
col = "blue"
)
abline(lm(y$X1~x), col = "red")
summary(y)
summary(lm(y$X1~x))
plot(
y$X1~x,
type = "b",
col = "blue"
)
abline(lm(y$X1~x), col = "red")
plot(
y$X1~x,
type = "b",
col = "blue",
pch = 17
)
plot(
y$X1~x,
type = "b",
col = "blue",
pch = 16
)
abline(lm(y$X1~x), col = "red")
.00188
.00188*14
rm(list = ls())
# Load functions and packages ---------------------------------------------
source("./RFunctions/LoadLibrary.R")
load.library(c(
))
# Read in the data --------------------------------------------------------
kiah.data <- read.csv("./Data/MarineTrainingAnalysis07172020.csv")
start.date <- as.Date("2020-06-02")
end.date <- as.Date("2020-07-16")
# Cleaning up data --------------------------------------------------------
names(kiah.data)[8:dim(kiah.data)[2]] <- as.character(rev(seq(start.date, end.date,1)))
kiah.data <- kiah.data[,na.omit(match(c(names(kiah.data)[1:7], as.character(seq(start.date, end.date,1))), names(kiah.data)))]
use.data <- kiah.data[,c(1:7, (dim(kiah.data)[2] - 14):dim(kiah.data)[2])]
# Creating % increase/decrease by county ----------------------------------
for(i in 9:22){
new.data <- use.data[,i]
old.data <- use.data[,i-1]
use.data[,dim(use.data)[2]+1] <- (new.data - old.data)/old.data
names(use.data)[dim(use.data)[2]] <- paste0("PChange", names(use.data)[i])
}
use.data[is.na(use.data)] <- 0
# Visualization -----------------------------------------------------------
x <- as.Date(names(use.data)[9:22])
y <- data.frame(t(use.data[1,23:dim(use.data)[2]]))
plot(
y$X1~x,
type = "b",
col = "blue",
pch = 16
)
abline(lm(y$X1~x), col = "red")
head(use.data)
i <- 1
tmp.y <- as.numeric(use.data[i, 23:dim(use.data)[2]])
tmp.y
tmp.lm <- lm(tmp.y ~ tmp.x)
# Creating analysis -------------------------------------------------------
tmp.x <- as.Date(names(use.data)[9:22])
tmp.y <- as.numeric(use.data[i, 23:dim(use.data)[2]])
tmp.lm <- lm(tmp.y ~ tmp.x)
tmp.lm
tmp.lm <- summary(coef(lm(tmp.y ~ tmp.x)))
tmp.lm
tmp.lm <- coef(summary(lm(tmp.y ~ tmp.x)))
tmp.lm
head(use.data)
# Creating analysis -------------------------------------------------------
tmp.x <- as.Date(names(use.data)[9:22])
# Creating analysis -------------------------------------------------------
tmp.x <- as.Date(names(use.data)[9:22])
lm.data <- data.frame()
for(i in 1:dim(use.data)[1]){
tmp.y <- as.numeric(use.data[i, 23:dim(use.data)[2]])
tmp.lm <- coef(summary(lm(tmp.y ~ tmp.x)))
for.out <- data.frame(
use.data$State[i],
use.data$County[i],
tmp.lm[2,1],
tmp.lm[2,4]
)
name(for.out) <- c("State", "County", "slope", "p.value")
lm.data <- rbind(lm.data, for.out)
print(paste0(100*round(i/dim(use.data)[1], 4), "% - regressions"))
}
# Creating analysis -------------------------------------------------------
tmp.x <- as.Date(names(use.data)[9:22])
lm.data <- data.frame()
for(i in 1:dim(use.data)[1]){
tmp.y <- as.numeric(use.data[i, 23:dim(use.data)[2]])
tmp.lm <- coef(summary(lm(tmp.y ~ tmp.x)))
for.out <- data.frame(
use.data$State[i],
use.data$County[i],
tmp.lm[2,1],
tmp.lm[2,4]
)
names(for.out) <- c("State", "County", "slope", "p.value")
lm.data <- rbind(lm.data, for.out)
print(paste0(100*round(i/dim(use.data)[1], 4), "% - regressions"))
}
dim(lm.data[lm.data$p.value <= .05,])[1]/dim(lm.data)[1]
lm.data[lm.data$p.value <= .05,]
use.data[use.data$PositiveTestedActiveCasesLast45Days == 0]
use.data[use.data$PositiveTestedActiveCasesLast45Days == 0,]
# Creating analysis -------------------------------------------------------
tmp.x <- as.Date(names(use.data)[9:22])
lm.data <- data.frame()
for(i in 1:dim(use.data)[1]){
if(use.data$PositiveTestedActiveCasesLast45Days[i] != 0){
tmp.y <- as.numeric(use.data[i, 23:dim(use.data)[2]])
tmp.lm <- coef(summary(lm(tmp.y ~ tmp.x)))
for.out <- data.frame(
use.data$State[i],
use.data$County[i],
tmp.lm[2,1],
tmp.lm[2,4]
)
names(for.out) <- c("State", "County", "slope", "p.value")
lm.data <- rbind(lm.data, for.out)
}
print(paste0(100*round(i/dim(use.data)[1], 4), "% - regressions"))
}
dim(lm.data[lm.data$p.value <= .05,])[1]/dim(lm.data)[1]
lm.data[lm.data$p.value <= .05,]
# Creating analysis -------------------------------------------------------
tmp.x <- as.Date(names(use.data)[9:22])
lm.data <- data.frame()
for(i in 1:dim(use.data)[1]){
if(use.data$PositiveTestedActiveCasesLast45Days[i] != 0){
tmp.y <- as.numeric(use.data[i, 23:dim(use.data)[2]])
tmp.lm <- coef(summary(lm(tmp.y ~ tmp.x)))
for.out <- data.frame(
use.data$State[i],
use.data$County[i],
tmp.lm[2,1],
tmp.lm[2,4],
use.data$`PChange2020-07-16`[i]
)
names(for.out) <- c("State", "County", "slope", "p.value", "last.change")
lm.data <- rbind(lm.data, for.out)
}
print(paste0(100*round(i/dim(use.data)[1], 4), "% - regressions"))
}
dim(lm.data[lm.data$p.value <= .05,])[1]/dim(lm.data)[1]
lm.data[lm.data$p.value <= .05,]
head(use.data)
# Creating analysis -------------------------------------------------------
tmp.x <- as.Date(names(use.data)[9:22])
lm.data <- data.frame()
for(i in 1:dim(use.data)[1]){
if(use.data$PositiveTestedActiveCasesLast45Days[i] != 0){
tmp.y <- as.numeric(use.data[i, 23:dim(use.data)[2]])
tmp.lm <- coef(summary(lm(tmp.y ~ tmp.x)))
for.out <- data.frame(
use.data$State[i],
use.data$County[i],
tmp.lm[2,1],
tmp.lm[2,4],
use.data$`PChange2020-07-16`[i],
use.data$`2020-07-16`
)
names(for.out) <- c("State", "County", "slope", "p.value", "last.change", "last.count")
lm.data <- rbind(lm.data, for.out)
}
print(paste0(100*round(i/dim(use.data)[1], 4), "% - regressions"))
}
dim(lm.data[lm.data$p.value <= .05,])[1]/dim(lm.data)[1]
lm.data[lm.data$p.value <= .05,]
tmp.x <- as.Date(names(use.data)[9:22])
lm.data <- data.frame()
for(i in 1:dim(use.data)[1]){
if(use.data$PositiveTestedActiveCasesLast45Days[i] != 0){
tmp.y <- as.numeric(use.data[i, 23:dim(use.data)[2]])
tmp.lm <- coef(summary(lm(tmp.y ~ tmp.x)))
for.out <- data.frame(
use.data$State[i],
use.data$County[i],
tmp.lm[2,1],
tmp.lm[2,4],
use.data$`PChange2020-07-16`[i],
use.data$`2020-07-16`[i]
)
names(for.out) <- c("State", "County", "slope", "p.value", "last.change", "last.count")
lm.data <- rbind(lm.data, for.out)
}
print(paste0(100*round(i/dim(use.data)[1], 4), "% - regressions"))
}
dim(lm.data[lm.data$p.value <= .05,])[1]/dim(lm.data)[1]
lm.data[lm.data$p.value <= .05,]
lm.use <- lm.data[lm.data$p.value <= .05,]
new.data <- data.frame()
dim(use.data)[1]
dim(lm.use)
23/268
names(use.data)
# Creating analysis -------------------------------------------------------
tmp.x <- as.Date(names(use.data)[16:22])
lm.data <- data.frame()
for(i in 1:dim(use.data)[1]){
if(use.data$PositiveTestedActiveCasesLast45Days[i] != 0){
tmp.y <- as.numeric(use.data[i, 16:22])
tmp.lm <- coef(summary(lm(tmp.y ~ tmp.x)))
for.out <- data.frame(
use.data$State[i],
use.data$County[i],
tmp.lm[2,1],
tmp.lm[2,4],
use.data$`PChange2020-07-16`[i],
use.data$`2020-07-16`[i]
)
names(for.out) <- c("State", "County", "slope", "p.value", "last.change", "last.count")
lm.data <- rbind(lm.data, for.out)
}
print(paste0(100*round(i/dim(use.data)[1], 4), "% - regressions"))
}
lm.data
rm(list = ls())
x <- read.csv(file.choose())
hist(unique(x$RtByState), breaks = 10, col = 'blue')
hist(unique(x$RtByState), breaks = 20, col = 'blue')
hist(unique(x$RtByState), breaks = 30, col = 'blue')
hist(unique(x$RtByState), col = 'blue')
hist(unique(x$RtByState), col = 'blue', breaks = 5)
hist(unique(x$RtByState), col = 'blue', breaks = 8)
length(unique(x$RtByState))
abline(v = mean(unique(x$RtByState)))
abline(v = mean(unique(x$RtByState)), lwd = 2)
abline(v = mean(unique(x$RtByState)), lwd = 2, col = 'red')
mean(unique(x$RtByState))
median(unique(x$RtByState))
unique(x$RtByState)
unique(x$State[x$RtByState])
unique(x$State[x$RtByState <= 1.0])
